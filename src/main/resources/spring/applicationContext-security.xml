<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
       xmlns:beans="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
            http://www.springframework.org/schema/beans/spring-beans.xsd
            http://www.springframework.org/schema/security
            http://www.springframework.org/schema/security/spring-security-3.2.xsd">

    <http pattern="/static/**" security="none"/>
    <http pattern="/upload/**" security="none"/>

    <http pattern="/index.jsp" security="none"/>
    <http pattern="/favicon.ico" security="none"/>

    <beans:bean id="osHttpAuthenticationEntryPoint"
                class="com.gameword.user.security.security.HttpAuthenticationEntryPoint">
    </beans:bean>

    <beans:bean id="multiBodyFilter"
                class="com.gameword.user.security.security.MultiBodyFilter"/>

    <!-- 自定义登录失败handler -->
    <beans:bean id="osHttpAuthenticationFailureHandler"
                class="com.gameword.user.security.security.HttpAuthenticationFailureHandler">
    </beans:bean>

    <beans:bean id="headerFilter"
                class="com.gameword.user.security.security.HttpHeaderFilter"/>

    <beans:bean id="tokenUtils" class="com.gameword.user.security.utils.TokenUtils"/>

    <beans:bean id="userCache"
                class="com.gameword.user.security.security.CoolplayUserCache">
        <beans:property name="cache" ref="redisCache"/>
        <beans:property name="userService" ref="userService"/>
    </beans:bean>

    <beans:bean id="osHttpAuthenticationTokenFilter"
                class="com.gameword.user.security.security.HttpAuthenticationTokenFilter">
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="tokenUtils" ref="tokenUtils"/>
        <beans:property name="authenticationFailureHandler"
                        ref="osHttpAuthenticationFailureHandler"/>
        <beans:property name="userCache" ref="userCache"/>
    </beans:bean>

    <beans:bean id="osHttpAccessDeniedHandler"
                class="com.gameword.user.security.security.HttpAccessDeniedHandler"/>

    <http use-expressions="true"
          create-session="stateless"
          entry-point-ref="osHttpAuthenticationEntryPoint">
        <!-- token filter -->
        <custom-filter ref="osHttpAuthenticationTokenFilter" position="PRE_AUTH_FILTER"/>
        <intercept-url pattern="/api/exception" access="permitAll"/>
        <intercept-url pattern="/api/logout" access="permitAll"/>
        <intercept-url pattern="/api/token/**" access="permitAll"/>
        <intercept-url pattern="/api/noneAuth/**" access="permitAll"/>
        <intercept-url pattern="/api/index/**" access="permitAll"/>
        <intercept-url pattern="/api/user/loginByMobilePhone" access="permitAll"/>
        <intercept-url pattern="/api/user/loginByVerifyCode" access="permitAll"/>
        <intercept-url pattern="/api/user/loginByWechat" access="permitAll"/>
        <intercept-url pattern="/api/user/loginByQQ" access="permitAll"/>
        <intercept-url pattern="/api/user/register" access="permitAll"/>
        <intercept-url pattern="/api/user/resetPassword" access="permitAll"/>

        <intercept-url pattern="/api/common/**" access="permitAll"/>
        <intercept-url pattern="/api/feedback/saveFeedback" access="permitAll"/>
        <intercept-url pattern="/api/help/**" access="permitAll"/>

        <intercept-url pattern="/api/station/detail" access="permitAll"/>
        <intercept-url pattern="/api/city/**" access="permitAll"/>
        <intercept-url pattern="/api/contact/addContact" access="permitAll"/>

        <intercept-url pattern="/api/advertise/info" access="permitAll"/>

        <intercept-url pattern="/**" access="isAuthenticated()"/>
        <!-- 加载权限拦截 -->
        <custom-filter ref="filterSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
        <!-- 修饰头部 -->
        <custom-filter ref="headerFilter" after="FIRST"/>
        <!-- 打印请求头信息 -->
        <custom-filter ref="multiBodyFilter" after="LAST"/>
        <!-- 权限认证失败后 -->
        <access-denied-handler ref="osHttpAccessDeniedHandler"/>

    </http>

    <authentication-manager erase-credentials="false" alias="authenticationManager">
        <authentication-provider ref="authenticationProvider">
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="encoder"
                class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!-- 加载用户相关 -->
    <beans:bean id="coolplayUserService"
                class="com.gameword.user.security.security.UserServiceImpl"/>

    <beans:bean id="authenticationProvider"
                class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
        <beans:property name="userDetailsService" ref="coolplayUserService"/>
        <beans:property name="hideUserNotFoundExceptions" value="false"/>
        <beans:property name="passwordEncoder" ref="encoder"/>
        <beans:property name="userCache" ref="userCache"/>
    </beans:bean>

    <!-- 资源国际化 -->
    <beans:bean id="messageSource"
                class="org.springframework.context.support.ReloadableResourceBundleMessageSource">
        <beans:property name="basename"
                        value="classpath:/properties/messages_zh_CN"/>
    </beans:bean>

    <!-- 自定义验证成功后处理的拦截器 -->
    <beans:bean id="filterSecurityInterceptor"
                class="com.gameword.user.security.security.SecurityInterceptor">
        <beans:property name="securityMetadataSource" ref="davdianSecurityMetadataSource"/>
        <beans:property name="accessDecisionManager"
                        ref="davdianAccessDecisionManager"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
    </beans:bean>

    <beans:bean id="davdianAccessDecisionManager"
                class="com.gameword.user.security.security.AccessDecisionManager"/>

    <beans:bean id="davdianSecurityMetadataSource"
                class="com.gameword.user.security.security.SecurityMetadataSourceImpl">
        <beans:constructor-arg ref="securityService"/>
    </beans:bean>

</beans:beans>
